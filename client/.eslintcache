[{"D:\\LanguagePareser\\client\\src\\index.js":"1","D:\\LanguagePareser\\client\\src\\reportWebVitals.js":"2","D:\\LanguagePareser\\client\\src\\App.js":"3","D:\\LanguagePareser\\client\\src\\service\\Localization.js":"4"},{"size":478,"mtime":1607279952999,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":1142,"mtime":1607280025262,"results":"8","hashOfConfig":"6"},{"size":398,"mtime":1607279708503,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"k28mzi",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\LanguagePareser\\client\\src\\index.js",[],["21","22"],"D:\\LanguagePareser\\client\\src\\reportWebVitals.js",[],"D:\\LanguagePareser\\client\\src\\App.js",["23"],"import { useState, useRef, useEffect } from \"react\";\nimport \"./style/app.scss\";\nimport Localization from \"./service/Localization\";\n\nfunction App() {\n  const [okTxt, setOkTxt] = useState(\"OK\");\n  const [cancelTxt, setCancelTxt] = useState(\"Cancel\");\n  const [lang, setLang] = useState(\"en\");\n\n  useEffect(() => {\n    async function loadDataAsync() {\n      let btntxt = \"\";\n      let canceltxt = \"\";\n      try {\n        btntxt = await Localization(`${lang}/Common_OKButtonText`);\n        canceltxt = await Localization(`${lang}/Common_CancelButtonText`);\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setOkTxt(btntxt);\n        setCancelTxt(canceltxt);\n      }\n    }\n    loadDataAsync();\n  }, [lang]);\n\n  const changeName = (val) => {\n    setLang(`${val}`);\n  };\n\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <button onClick={() => changeName(\"en\")}>English</button>\n        <button onClick={() => changeName(\"fi\")}>Finnish</button>\n      </div>\n      <div className=\"container\">\n        <button>{okTxt}</button>\n        <button>{cancelTxt}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\LanguagePareser\\client\\src\\service\\Localization.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":20,"nodeType":"32","messageId":"33","endLine":1,"endColumn":26},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]